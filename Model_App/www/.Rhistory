server <- function(input, output) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('Ensemble.UI')
runApp('Ensemble.UI')
library(tools)
install.packages("rio")
library(rio)
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
available_formats <- c(
'Comma separated'   = 'csv',
'Excel (>=2007)'    = 'xlsx',
'R'                 = 'rds',
available_formats <- c(
'Comma separated'   = 'csv',
'Excel (>=2007)'    = 'xlsx',
'R'                 = 'rds',
'URL'               = 'rda'
)
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
output$table <- renderTable({
data
})
data <- reactive({
file1 <- input$file
if(is.null(file1)){return()}
read.table(file=file1$datapath, sep=input$sep, header = input$header, stringsAsFactors = input$stringAsFactors)
})
output$table <- renderTable({
data
})
runApp('Ensemble.UI')
runApp('Ensemble.UI')
library(shiny)
ui<-shinyUI(fluidPage(sidebarLayout(
titlePanel('Load and Save Data'),
sidebarPanel(fileInput('infile', label = 'Browse'),
downloadButton('download_data', 'Download')
),
mainPanel(output$table)
)
)
)
shinyServer(function(input, output) {
data <- reactive({
file1 <- input$file
if(is.null(file1)){return()}
read.table(file=file1$datapath, sep=input$sep, header = input$header, stringsAsFactors = input$stringAsFactors)
})
output$table <- renderTable({
data()
})
# downloadHandler() takes two arguments, both functions.
# The content function is passed a filename as an argument, and
#   it should write out data to that filename.
output$downloadData <- downloadHandler(
# This function returns a string which tells the client
# browser what name to use when saving the file.
filename = function() {
paste(input$dataset, input$filetype, sep = ".")
},
# Write to a file specified by the 'file' argument
write.table(datasetInput(), file, sep = sep,
row.names = FALSE)
)
})
# Run the application
shinyApp(ui = ui, server = server)
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
library(shiny)
ui<-shinyUI(fluidPage(sidebarLayout(
titlePanel('Load and Save Data'),
sidebarPanel(fileInput('infile', label = 'Browse'),
downloadButton('download_data', 'Download')
),
mainPanel(DT::renderDataTable(outputID = "table"))
)
)
)
Server<-function(input, output) {
data <- reactive({
file1 <- input$file
if(is.null(file1)){return()}
read.table(file=file1$datapath)})
output$table <- DT::renderDataTable({
data()
})
output$download_data <- downloadHandler(
filename = function() {
paste0("file.", input$file)
},
content = function(file) {
write_csv(movies %>% select(input$selected_var), file)
}
)
}
# Ru the application
shinyApp(ui = ui, server = server)
library(DT)
runApp('Ensemble.UI')
runApp('Ensemble.UI')
runApp('Ensemble.UI')
data <- reactive({
file1 <- input$file
if(is.null(file1)){return()}
read.table(file=file1$datapath)})
library(shiny)
library(DT)
ui<-shinyUI(fluidPage
(sidebarLayout
(titlePanel('Load and Save Data'),
(sidebarPanel
(fileInput('infile', label = 'Browse'),
downloadButton('download_data', 'Download'))
),
mainPanel(DT::renderDataTable(outputID = "table"))
)
)
)
Server<-function(input, output) {
data <- reactive({
file1 <- input$file
if(is.null(file1)){return()}})
output$table <- DT::renderDataTable({
data()
})
output$download_data <- downloadHandler(
filename = function() {
paste0("file.", input$file)
},
content = function(file) {
write_csv(movies %>% select(input$selected_var), file)
}
)
}
# Ru the application
shinyApp(ui = ui, server = server)
runApp('Ensemble.UI')
df <- read.csv(input$file$datapath)
runApp('Ensemble.UI')
library(shiny)
library(DT)
ui<-shinyUI(fluidPage
(sidebarLayout
(titlePanel('Load and Save Data'),
(sidebarPanel
(fileInput('infile', label = 'Browse'),
downloadButton('download_data', 'Download'))
),
mainPanel(DT::renderDataTable(outputID = "table"))
)
)
)
Server<-function(input, output) {
df <- read.csv(input$file$datapath)
output$table <- DT::renderDataTable({DT::datatable(df)
})
output$download_data <- downloadHandler(
filename = function() {
paste0("file.", input$file)
},
content = function(file) {
write_csv(movies %>% select(input$selected_var), file)
}
)
}
# Ru the application
shinyApp(ui = ui, server = server)
shiny::runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
Data<-read.csv(file=file1$datapath, sep=input$sep, header = input$header, stringsAsFactors = input$stringAsFactors)
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
?isolate
x=(1,3,2,3,4,3,2,8)
x=c(1,3,2,3,4,3,2,8)
sd(x)
2.12*2.12
var(x)
median(x)
mode(x)
x<-as.numeric(x)
mode(x)
z = c(76,72,78,78,73)
bias(z)
install.packages("bias")
install.packages("biasbetareg")
bias(z)
?bias()
??bias
shiny::runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
?mainPanel
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
library(gridExtra)
install.packages("gridExtra")
?gridExtra
?gridExtra()
??gridExtra
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
install.packages('gridGraohics')
install.packages('gridGraphics')
library(gridGraphics)
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
?corrplot
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
?sidebarLayout
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
getwd()
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
source("D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/p-value_mat.R")
p.mat
p.mat
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
mtcars
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
write.csv("mtcars.csv",mtcars)
write.csv("mtcars",mtcars)
write.csv(mtcars,"mtcars.csv")
getwd()
write.csv(iris,"iris.csv")
write.csv(pressure,"pressure.csv")
write.csv(rock,"rock.csv")
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
if (interactive()) {
# example app for inserting/removing a tab
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
actionButton("add", "Add 'Dynamic' tab"),
actionButton("remove", "Remove 'Foo' tab")
),
mainPanel(
tabsetPanel(id = "tabs",
tabPanel("Hello", "This is the hello tab"),
tabPanel("Foo", "This is the foo tab"),
tabPanel("Bar", "This is the bar tab")
)
)
)
)
server <- function(input, output, session) {
observeEvent(input$add, {
insertTab(inputId = "tabs",
tabPanel("Dynamic", "This a dynamically-added tab"),
target = "Bar"
)
})
observeEvent(input$remove, {
removeTab(inputId = "tabs", target = "Foo")
})
}
shinyApp(ui, server)
# example app for prepending/appending a navbarMenu
ui <- navbarPage("Navbar page", id = "tabs",
tabPanel("Home",
actionButton("prepend", "Prepend a navbarMenu"),
actionButton("append", "Append a navbarMenu")
)
)
server <- function(input, output, session) {
observeEvent(input$prepend, {
id <- paste0("Dropdown", input$prepend, "p")
prependTab(inputId = "tabs",
navbarMenu(id,
tabPanel("Drop1", paste("Drop1 page from", id)),
tabPanel("Drop2", paste("Drop2 page from", id)),
"------",
"Header",
tabPanel("Drop3", paste("Drop3 page from", id))
)
)
})
observeEvent(input$append, {
id <- paste0("Dropdown", input$append, "a")
appendTab(inputId = "tabs",
navbarMenu(id,
tabPanel("Drop1", paste("Drop1 page from", id)),
tabPanel("Drop2", paste("Drop2 page from", id)),
"------",
"Header",
tabPanel("Drop3", paste("Drop3 page from", id))
)
)
})
}
shinyApp(ui, server)
}
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
install.packages("shinythemes")
library(shinythemes)
library(shiny)
library(shinydashboard)
library(shinythemes)
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
?shinytheme()
runApp('D:/Documents/ShinyApp_Liqour')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
library(shiny)
library(shinydashboard)
library(shinythemes)
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
setwd("D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App")
runApp('New folder')
runApp('New folder')
runApp('D:/Documents/ShinyApp_Liqour')
runApp('D:/Documents/ShinyApp_Liqour')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
runApp('New folder')
getwd()
setwd("D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder")
runApp()
getwd()
runApp()
runApp()
setwd("D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder/www")
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
?titlePanel()
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
runApp('D:/Documents/R_Projects/Data_Camp_Tutorials/ML_Tree_App/New folder')
